# D2 - 1976

# 기본 제공코드는 임의 수정해도 관계 없습니다. 단, 입출력 포맷 주의
# 아래 표준 입출력 예제 필요시 참고하세요.

# 표준 입력 예제
'''
a = int(input())                        정수형 변수 1개 입력 받는 예제
b, c = map(int, input().split())        정수형 변수 2개 입력 받는 예제 
d = float(input())                      실수형 변수 1개 입력 받는 예제
e, f, g = map(float, input().split())   실수형 변수 3개 입력 받는 예제
h = input()                             문자열 변수 1개 입력 받는 예제
'''

# 표준 출력 예제
'''
a, b = 6, 3
c, d, e = 1.0, 2.5, 3.4
f = "ABC"
print(a)                                정수형 변수 1개 출력하는 예제
print(b, end = " ")                     줄바꿈 하지 않고 정수형 변수와 공백을 출력하는 예제
print(c, d, e)                          실수형 변수 3개 출력하는 예제
print(f)                                문자열 1개 출력하는 예제
'''

import sys


'''
      아래의 구문은 input.txt 를 read only 형식으로 연 후,
      앞으로 표준 입력(키보드) 대신 input.txt 파일로부터 읽어오겠다는 의미의 코드입니다.
      여러분이 작성한 코드를 테스트 할 때, 편의를 위해서 input.txt에 입력을 저장한 후,
      아래 구문을 이용하면 이후 입력을 수행할 때 표준 입력 대신 파일로부터 입력을 받아올 수 있습니다.

      따라서 테스트를 수행할 때에는 아래 주석을 지우고 이 구문을 사용하셔도 좋습니다.
      아래 구문을 사용하기 위해서는 import sys가 필요합니다.

      단, 채점을 위해 코드를 제출하실 때에는 반드시 아래 구문을 지우거나 주석 처리 하셔야 합니다.
'''
sys.stdin = open("input.txt", "r")

T = int(input())
# 여러개의 테스트 케이스가 주어지므로, 각각을 처리합니다.
for test_case in range(1, T + 1):
    # ///////////////////////////////////////////////////////////////////////////////////
    # 로직 생각해보기.
    # 1. 시각은 1부터 12까지, 분은 0부터 59까지 값을 가진다.
    # 2. 12시 59분에서 1분 지나면 1시 00분으로 초기화.
    # 3. 매 시간 59분에서 1분 지나면 시간 +1, 분은 0으로 초기화.
    # --------------------------------------------
    # 분을 먼저 더해서 값으로 저장한다.
    # 만약 60 이상이면 두 개의 값으로 나눠 저장하는데 하나는 시간, 나머지는 작은값 - (60-큰 값)
    # 으로 만든다.
    # 분은 그대로 두고, 추가된 시간(0 또는 1)을 합한 시간에 더한다.
    # 12시가 초과하면 1로 초기화한다.
    # x + y + (0 or 1)

    times = list(map(int, input().split()))
    hours = times[::2] # 각각의 변수로 저장.
    mins = times[1::2]
    
    # 먼저 분에 대한 작업을 실시한다.
    cal_mins = {} # 56 + 12 = 68 = 60 + 8 = 60 + (12 - (60 - 56))
    if sum(mins) > 59:
        cal_mins['h'] = 1
        cal_mins['m'] = min(mins) - (60 - max(mins))
    else:
        cal_mins['h'] = 0
        cal_mins['m'] = sum(mins)

    # 다음은 시각에 대한 작업을 실시한다. 7 + 5 + 1 = 13
    if sum(hours) + cal_mins['h'] > 12:
        cal_mins['h'] = sum(hours) + cal_mins['h'] - 12
    else:
        cal_mins['h'] = cal_mins['h'] + sum(hours)
    
    print(f'#{test_case} {cal_mins["h"]} {cal_mins["m"]}')

    # ///////////////////////////////////////////////////////////////////////////////////
